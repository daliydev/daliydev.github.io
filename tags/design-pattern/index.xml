<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>design pattern on Even - A super concise theme for Hugo</title>
    <link>http://daliydev.github.io/tags/design-pattern/</link>
    <description>Recent content in design pattern on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="http://daliydev.github.io/tags/design-pattern/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[java] Adapter 패턴</title>
      <link>http://daliydev.github.io/post/java/adapter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://daliydev.github.io/post/java/adapter/</guid>
      <description>서로 다른 인터페이스가 호환이 되지 않을 때 인터페이스에 영향 받는 부분들을 수정하다가 시스템 장애가 발생하는 일이 발생할 수 있기 때문에, 어댑터 클래스를 만들어 기</description>
    </item>
    
    <item>
      <title>[java] Singleton 패턴</title>
      <link>http://daliydev.github.io/post/java/singleton/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://daliydev.github.io/post/java/singleton/</guid>
      <description>싱글톤은 오직 한 개의 인스턴스만 생성하여, 불필요한 객체 생성을 피한다. Eager Initialization 사용하지 않더라도 인스턴스가 항상 생성된다는 단점. static은 Class가</description>
    </item>
    
  </channel>
</rss>
